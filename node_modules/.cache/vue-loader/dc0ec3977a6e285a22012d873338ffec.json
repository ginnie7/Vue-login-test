{"remainingRequest":"/Users/Ginius/Desktop/github/gavagai/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Ginius/Desktop/github/gavagai/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Ginius/Desktop/github/gavagai/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Ginius/Desktop/github/gavagai/src/components/Login.vue?vue&type=template&id=ef68022e&","dependencies":[{"path":"/Users/Ginius/Desktop/github/gavagai/src/components/Login.vue","mtime":1557689758049},{"path":"/Users/Ginius/Desktop/github/gavagai/node_modules/cache-loader/dist/cjs.js","mtime":1557593994339},{"path":"/Users/Ginius/Desktop/github/gavagai/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Ginius/Desktop/github/gavagai/node_modules/cache-loader/dist/cjs.js","mtime":1557593994339},{"path":"/Users/Ginius/Desktop/github/gavagai/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"background\" }, [\n    _c(\"div\", { staticClass: \"login\" }, [\n      _vm.loggingIn\n        ? _c(\"div\", { staticClass: \"container-loading\" }, [\n            _c(\"img\", { attrs: { src: \"/loading.gif\", alt: \"Loading Icon\" } })\n          ])\n        : _vm._e(),\n      _c(\"img\", {\n        attrs: { src: \"/gavagai.png\", width: \"340px\", alt: \"Gavagai logo\" }\n      }),\n      _c(\"h2\", [_vm._v(\"Chatbot Tool\")]),\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.loginSubmit($event)\n            }\n          }\n        },\n        [\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.username,\n                expression: \"username\"\n              }\n            ],\n            attrs: { type: \"username\", placeholder: \"Username\", required: \"\" },\n            domProps: { value: _vm.username },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.username = $event.target.value\n              }\n            }\n          }),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.password,\n                expression: \"password\"\n              }\n            ],\n            attrs: { type: \"password\", placeholder: \"Password\", required: \"\" },\n            domProps: { value: _vm.password },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.password = $event.target.value\n              }\n            }\n          }),\n          _c(\"button\", { attrs: { type: \"submit\" } }, [_vm._v(\"LOGIN\")]),\n          _vm.loginError\n            ? _c(\"p\", { staticStyle: { color: \"red\" } }, [\n                _vm._v(_vm._s(_vm.loginError))\n              ])\n            : _vm._e(),\n          _c(\"small\", [_vm._v(\"Forgot Password?\")])\n        ]\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}