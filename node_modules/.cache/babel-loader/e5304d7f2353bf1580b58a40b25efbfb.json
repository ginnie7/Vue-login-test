{"remainingRequest":"/Users/Ginius/Desktop/github/gavagai/node_modules/babel-loader/lib/index.js!/Users/Ginius/Desktop/github/gavagai/node_modules/eslint-loader/index.js??ref--13-0!/Users/Ginius/Desktop/github/gavagai/src/store.js","dependencies":[{"path":"/Users/Ginius/Desktop/github/gavagai/src/store.js","mtime":1557691176003},{"path":"/Users/Ginius/Desktop/github/gavagai/node_modules/cache-loader/dist/cjs.js","mtime":1557593994339},{"path":"/Users/Ginius/Desktop/github/gavagai/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Ginius/Desktop/github/gavagai/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/Ginius/Desktop/github/gavagai/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from './router';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    accessToken: localStorage.getItem('access_token') || '',\n    loggingIn: false,\n    loginError: null\n  },\n  mutations: {\n    loginStart: function loginStart(state) {\n      return state.loggingIn = true;\n    },\n    loginStop: function loginStop(state, errorMessage) {\n      state.loggingIn = false;\n      state.loginError = errorMessage;\n    },\n    updateAccessToken: function updateAccessToken(state, accessToken) {\n      state.accessToken = accessToken;\n    },\n    logout: function logout(state) {\n      state.accessToken = null;\n    }\n  },\n  actions: {\n    doLogin: function doLogin(_ref, loginData) {\n      var commit = _ref.commit;\n      commit('loginStart');\n      axios.post('https://stage.apis.chatbot.gavagai.io/api/v1/login', _objectSpread({}, loginData)).then(function (response) {\n        localStorage.setItem('access_token', JSON.parse(JSON.stringify(response.data.access_token)));\n        commit('loginStop', null);\n        commit('updateAccessToken', JSON.parse(JSON.stringify(response.data.access_token)));\n        router.push('/user');\n      }).catch(function (error) {\n        commit('loginStop', JSON.parse(JSON.stringify(error.response.data.Message)));\n        commit('updateAccessToken', null);\n      });\n    },\n    fetchAccessToken: function fetchAccessToken(_ref2) {\n      var commit = _ref2.commit;\n      commit('updateAccessToken', localStorage.getItem('access_token'));\n    },\n    logout: function logout(_ref3) {\n      var commit = _ref3.commit;\n      localStorage.removeItem('access_token');\n      commit('logout');\n      router.push('/login');\n    }\n  }\n});",{"version":3,"sources":["/Users/Ginius/Desktop/github/gavagai/src/store.js"],"names":["Vue","Vuex","axios","router","use","Store","state","accessToken","localStorage","getItem","loggingIn","loginError","mutations","loginStart","loginStop","errorMessage","updateAccessToken","logout","actions","doLogin","loginData","commit","post","then","setItem","JSON","parse","stringify","response","data","access_token","push","catch","error","Message","fetchAccessToken","removeItem"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEAH,IAAII,GAAJ,CAAQH,IAAR;AAEA,eAAe,IAAIA,KAAKI,KAAT,CAAe;AAC5BC,SAAO;AACLC,iBAAaC,aAAaC,OAAb,CAAqB,cAArB,KAAwC,EADhD;AAELC,eAAW,KAFN;AAGLC,gBAAY;AAHP,GADqB;AAM5BC,aAAW;AACTC,gBAAY;AAAA,aAAUP,MAAMI,SAAN,GAAkB,IAA5B;AAAA,KADH;AAETI,eAAW,mBAACR,KAAD,EAAQS,YAAR,EAAyB;AAClCT,YAAMI,SAAN,GAAkB,KAAlB;AACAJ,YAAMK,UAAN,GAAmBI,YAAnB;AACD,KALQ;AAMTC,uBAAmB,2BAACV,KAAD,EAAQC,WAAR,EAAwB;AACzCD,YAAMC,WAAN,GAAoBA,WAApB;AACD,KARQ;AASTU,YAAQ,uBAAS;AACfX,YAAMC,WAAN,GAAoB,IAApB;AACD;AAXQ,GANiB;AAmB5BW,WAAS;AACPC,WADO,yBACaC,SADb,EACwB;AAAA,UAArBC,MAAqB,QAArBA,MAAqB;AAC7BA,aAAO,YAAP;AAEAnB,YACGoB,IADH,CACQ,oDADR,oBAEOF,SAFP,GAIGG,IAJH,CAIQ,oBAAY;AAChBf,qBAAagB,OAAb,CACE,cADF,EAEEC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeC,SAASC,IAAT,CAAcC,YAA7B,CAAX,CAFF;AAIAT,eAAO,WAAP,EAAoB,IAApB;AACAA,eACE,mBADF,EAEEI,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeC,SAASC,IAAT,CAAcC,YAA7B,CAAX,CAFF;AAIA3B,eAAO4B,IAAP,CAAY,OAAZ;AACD,OAfH,EAgBGC,KAhBH,CAgBS,iBAAS;AACdX,eACE,WADF,EAEEI,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeM,MAAML,QAAN,CAAeC,IAAf,CAAoBK,OAAnC,CAAX,CAFF;AAIAb,eAAO,mBAAP,EAA4B,IAA5B;AACD,OAtBH;AAuBD,KA3BM;AA4BPc,oBA5BO,mCA4BsB;AAAA,UAAVd,MAAU,SAAVA,MAAU;AAC3BA,aAAO,mBAAP,EAA4Bb,aAAaC,OAAb,CAAqB,cAArB,CAA5B;AACD,KA9BM;AA+BPQ,UA/BO,yBA+BY;AAAA,UAAVI,MAAU,SAAVA,MAAU;AACjBb,mBAAa4B,UAAb,CAAwB,cAAxB;AACAf,aAAO,QAAP;AACAlB,aAAO4B,IAAP,CAAY,QAAZ;AACD;AAnCM;AAnBmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from './router';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    accessToken: localStorage.getItem('access_token') || '',\n    loggingIn: false,\n    loginError: null\n  },\n  mutations: {\n    loginStart: state => (state.loggingIn = true),\n    loginStop: (state, errorMessage) => {\n      state.loggingIn = false;\n      state.loginError = errorMessage;\n    },\n    updateAccessToken: (state, accessToken) => {\n      state.accessToken = accessToken;\n    },\n    logout: state => {\n      state.accessToken = null;\n    }\n  },\n  actions: {\n    doLogin({ commit }, loginData) {\n      commit('loginStart');\n\n      axios\n        .post('https://stage.apis.chatbot.gavagai.io/api/v1/login', {\n          ...loginData\n        })\n        .then(response => {\n          localStorage.setItem(\n            'access_token',\n            JSON.parse(JSON.stringify(response.data.access_token))\n          );\n          commit('loginStop', null);\n          commit(\n            'updateAccessToken',\n            JSON.parse(JSON.stringify(response.data.access_token))\n          );\n          router.push('/user');\n        })\n        .catch(error => {\n          commit(\n            'loginStop',\n            JSON.parse(JSON.stringify(error.response.data.Message))\n          );\n          commit('updateAccessToken', null);\n        });\n    },\n    fetchAccessToken({ commit }) {\n      commit('updateAccessToken', localStorage.getItem('access_token'));\n    },\n    logout({ commit }) {\n      localStorage.removeItem('access_token');\n      commit('logout');\n      router.push('/login');\n    }\n  }\n});\n"]}]}